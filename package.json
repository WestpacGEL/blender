{
	"name": "blender",
	"version": "1.0.0",
	"description": "The blender for the Westpac Design System",
	"repository": "https://github.com/WestpacGEL/blender",
	"author": "Westpac GEL Team <gel@westpac.com.au>",
	"contributors": [
		{
			"name": "Dominik Wilkowski",
			"email": "Hi@Dominik-Wilkowski.com",
			"url": "https://dominik-wilkowski.com"
		},
		{
			"name": "Thomas Walker",
			"email": "bladey@me.com",
			"url": "https://tomwalkergelato.com"
		}
	],
	"license": "GPL-3.0+",
	"scripts": {
		"prepublishOnly": "yarn test",
		"start": "echo 'TODO'",
		"build": "yarn build:lib && yarn build:bin",
		"build:lib": "npx mkdirp lib && babel src --out-dir lib",
		"build:bin": "npx mkdirp bin && mv lib/bin.js bin/index.js",
		"watch": "yarn build:lib && onchange 'src/**/*' -- yarn build:lib",
		"format": "prettier --write \"**/*.{js,md,mdx,json}\"",
		"test": "yarn test:format && yarn test:lint && yarn test:unit",
		"test:format": "prettier --list-different \"**/*.{js,md,mdx,json}\"",
		"test:unit": "jest --coverage",
		"test:unit-watch": "jest --watchAll --coverage",
		"test:types": "yarn types:clean && yarn types:declaration",
		"test:lint": "eslint src/",
		"types:clean": "find lib/ -type f -name '*.d.ts' -exec rm {} +",
		"types:declaration": "tsc -p declaration.tsconfig.json",
		"deploy:staging:sync": "rsync --exclude=node_modules --exclude=coverage --exclude=tests --exclude=lib --exclude=.env --exclude=blender.log --exclude=starter.sh -avzhe ssh --progress ./* deploy@165.22.110.244:/srv/blender",
		"deploy:staging:yarn:root": "ssh deploy@165.22.110.244 yarn --cwd /srv/blender install --frozen-lockfile",
		"deploy:staging:yarn:server": "ssh deploy@165.22.110.244 yarn --cwd /srv/blender/server install --frozen-lockfile --production",
		"deploy:staging:build": "ssh deploy@165.22.110.244 yarn --cwd /srv/blender build",
		"deploy:staging:restart": "ssh deploy@165.22.110.244 forever restart /srv/blender/server/server.js",
		"deploy:staging:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@165.22.110.244\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/blender/server/nginx/blender-routes.conf /etc/nginx/snippets/blender-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:staging\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
		"deploy:staging": "yarn deploy:staging:sync && yarn deploy:staging:yarn:root && yarn deploy:staging:yarn:server && yarn deploy:staging:build && yarn deploy:staging:restart && yarn deploy:staging:msg",
		"deploy:live:sync": "rsync --exclude=node_modules --exclude=coverage --exclude=tests --exclude=lib --exclude=.env --exclude=blender.log --exclude=starter.sh -avzhe ssh --progress ./* deploy@128.199.200.220:/srv/blender",
		"deploy:live:yarn:root": "ssh deploy@128.199.200.220 yarn --cwd /srv/blender install --frozen-lockfile",
		"deploy:live:yarn:server": "ssh deploy@128.199.200.220 yarn --cwd /srv/blender/server install --frozen-lockfile --production",
		"deploy:live:build": "ssh deploy@128.199.200.220 yarn --cwd /srv/blender build",
		"deploy:live:restart": "ssh deploy@128.199.200.220 forever restart /srv/blender/server/server.js",
		"deploy:live:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@128.199.200.220\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/blender/server/nginx/blender-routes.conf /etc/nginx/snippets/blender-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:live\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
		"deploy:live": "yarn deploy:live:sync && yarn deploy:live:yarn:root && yarn deploy:live:yarn:server && yarn deploy:live:build && yarn deploy:live:restart && yarn deploy:live:msg",
		"nuke": "rm -rf lib && rm -rf node_modules && rm yarn.lock",
		"fresh": "yarn nuke && yarn"
	},
	"main": "lib/index.js",
	"bin": {
		"blender": "./bin/index.js"
	},
	"engines": {
		"node": ">=10"
	},
	"jest": {
		"displayName": "Blender",
		"testEnvironment": "node",
		"testRegex": "\\.spec.js$",
		"roots": [
			".",
			"tests/"
		],
		"collectCoverageFrom": [
			"src/*.js",
			"!src/indentHtml.js"
		],
		"coverageThreshold": {
			"global": {
				"branches": 0,
				"functions": 0,
				"lines": 0,
				"statements": 0
			}
		}
	},
	"eslintConfig": {
		"env": {
			"node": true,
			"commonjs": true,
			"es6": true
		},
		"extends": "eslint:recommended",
		"globals": {
			"Atomics": "readonly",
			"SharedArrayBuffer": "readonly"
		},
		"parserOptions": {
			"ecmaVersion": 2018
		},
		"rules": {
			"no-async-promise-executor": "off",
			"no-unused-vars": [
				"error",
				{
					"argsIgnorePattern": "_"
				}
			]
		}
	},
	"dependencies": {
		"@babel/plugin-syntax-dynamic-import": "^7.8.3",
		"@babel/plugin-transform-runtime": "^7.9.0",
		"@babel/register": "^7.9.0",
		"@emotion/core": "^10.0.28",
		"@emotion/weak-memoize": "^0.2.5",
		"cfonts": "^2.8.1",
		"create-emotion-server": "^10.0.27",
		"js-beautify": "^1.11.0",
		"react": "^16.13.1",
		"react-dom": "^16.13.1",
		"window-size": "^1.1.1"
	},
	"devDependencies": {
		"@babel/cli": "^7.8.4",
		"@babel/core": "^7.9.0",
		"@babel/preset-env": "^7.9.5",
		"@babel/preset-react": "^7.9.4",
		"@types/node": "^13.11.1",
		"eslint": "^6.8.0",
		"jest-cli": "^25.3.0",
		"onchange": "^6.1.0",
		"prettier": "^2.0.4",
		"typescript": "^3.8.3"
	}
}
